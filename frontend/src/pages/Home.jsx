import React, { Fragment, useState } from "react";
import { useEffect } from "react";
import { Card, FormField, Loader } from "../components";
import axiosClient from "../apis/axiosClient";

const RenderCards = ({ data, title }) => {
	if (data?.length > 0)
		return data.map((post) => <Card key={post._id} {...post} />);

	return (
		<h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>
	);
};

function Home() {
	const [loading, setLoading] = useState(false);
	const [searchText, setSearchText] = useState("");
	const [searchResults, setSearchResults] = useState(null);
	const [searchTimeOut, setSearchTimeOut] = useState(null);
	const [posts, setPosts] = useState(null);

	useEffect(() => {
		(async function () {
			setLoading(true);
			try {
				const postList = await axiosClient.get("/post");
				if (postList.status === 201) {
					setPosts(postList.data);
				}
			} catch (error) {
				alert(error);
			} finally {
				setLoading(false);
			}
		})();
	}, []);

	const handleSeachChange = (e) => {
		clearTimeout(searchTimeOut);
		setSearchText(e.target.value);
		setSearchTimeOut(
			setTimeout(() => {
				const searchResult = posts.filter((item) =>
					item.name
						.toLowerCase()
						.includes(
							searchText.toLowerCase() ||
								item.prompt.toLowerCase().includes(searchText.toLowerCase())
						)
				);

				setSearchResult(searchResult);
			}, 500)
		);
	};

	return (
		<section className="max-w-7xl mx-auto">
			<div>
				<h1 className="font-extrabold text-[#222328] text-[32px]">
					The Community Showcase
				</h1>
				<p className="mt-2 text-[#666e75] text-[14px] max-w-[500px]">
					{
						"Browser through a collection of imaginative and visually stunning images generated by DALL-E AI"
					}
				</p>
			</div>
			<div className="mt-16">
				<FormField
					label="Search Post"
					type="text"
					name="text"
					value={searchText}
					placeholder="Search Posts"
					onChange={handleSeachChange}
				/>
			</div>
			<div className="mt-10">
				{loading ? (
					<div className="flex justify-center items-center">
						<Loader />
					</div>
				) : (
					<Fragment>
						{searchText && (
							<h2 className="font-medium text-xl text-[#666e75] mb-3">
								Showing result for{" "}
								<span className="text-[#222328]">{searchText}</span>
							</h2>
						)}
						<div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
							{searchText ? (
								<RenderCards
									data={searchResults}
									title="No Search Result Found!"
								/>
							) : (
								<RenderCards data={posts} title="No Post Found!" />
							)}
						</div>
					</Fragment>
				)}
			</div>
		</section>
	);
}

export default Home;
